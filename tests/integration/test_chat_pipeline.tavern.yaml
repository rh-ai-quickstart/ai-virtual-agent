test_name: Test Complete Chat Pipeline - First and Second USA President

stages:
  - name: Get available models
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/api/llama_stack/llms"
      method: GET
      headers:
        Accept: application/json
    response:
      status_code: 200
      headers:
        content-type: application/json
      save:
        json:
          model_name: "[0].model_name"

  - name: Create virtual assistant with 2-word limit
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/api/virtual_assistants/"
      method: POST
      headers:
        Content-Type: application/json
        Accept: application/json
      json:
        name: "Two Word Assistant"
        prompt: "You are a helpful assistant. Always answer questions with exactly 2 words only. Never use more than 2 words in your responses."
        model_name: "{model_name}"
        temperature: 0.0
        top_p: 0.9
        max_tokens: 300
        repetition_penalty: 1.0
        max_infer_iters: 1
        tools: []
        knowledge_base_ids: []
        input_shields: []
        output_shields: []
    response:
      status_code: 201
      headers:
        content-type: application/json
      save:
        json:
          agent_id: "id"

  - name: List existing sessions for potential reuse
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/api/chat_sessions/?agent_id={agent_id}&limit=1"
      method: GET
      headers:
        Accept: application/json
    response:
      status_code: 200
      headers:
        content-type: application/json
      # This step shows existing sessions in the test output for visibility

  - name: Ensure test session exists
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/api/chat_sessions/"
      method: POST
      headers:
        Content-Type: application/json
        Accept: application/json
      json:
        agent_id: "{agent_id}"
        session_name: "Tavern-Test-Session"
    response:
      status_code: 200
      headers:
        content-type: application/json
      save:
        json:
          session_id: "id"

  - name: Ask about first USA president (Test 1)
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/api/llama_stack/chat"
      method: POST
      headers:
        Content-Type: application/json
        Accept: application/json
      json:
        virtualAssistantId: "{agent_id}"
        sessionId: "{session_id}"
        messages:
          - role: "system"
            content: "Answer with exactly 2 words only."
          - role: "user"
            content: "Who is the first president of the united states?"
        stream: false
    response:
      status_code: 200
      verify_response_with:
        - function: tests.integration.validators:validate_exact_text
          extra_kwargs:
            expected_text: "George Washington"

  - name: Ask about second USA president (Test 2 - Same Agent)
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/api/llama_stack/chat"
      method: POST
      headers:
        Content-Type: application/json
        Accept: application/json
      json:
        virtualAssistantId: "{agent_id}"
        sessionId: "{session_id}"
        messages:
          - role: "user"
            content: "Who is the second president of the united states?"
        stream: false
    response:
      status_code: 200
      verify_response_with:
        - function: tests.integration.validators:validate_exact_text
          extra_kwargs:
            expected_text: "John Adams"
