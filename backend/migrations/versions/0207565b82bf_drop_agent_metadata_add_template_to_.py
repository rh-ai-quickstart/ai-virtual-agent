"""drop_agent_metadata_add_template_to_virtual_agent_configs

Revision ID: 0207565b82bf
Revises: 0fcd68e18e68
Create Date: 2025-09-25 14:07:50.602635

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0207565b82bf'
down_revision: Union[str, None] = '0fcd68e18e68'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('agent_metadata')
    op.add_column('virtual_agent_configs',
                  sa.Column('template_id', sa.String(length=255), nullable=True))
    op.create_foreign_key(None, 'virtual_agent_configs', 'agent_templates',
                          ['template_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'virtual_agent_configs', type_='foreignkey')
    op.drop_column('virtual_agent_configs', 'template_id')
    op.create_table(
        'agent_metadata',
        sa.Column('agent_id', sa.VARCHAR(length=255), autoincrement=False,
                  nullable=False),
        sa.Column('template_id', sa.VARCHAR(length=255), autoincrement=False,
                  nullable=True),
        sa.Column('custom_metadata', postgresql.JSON(astext_type=sa.Text()),
                  autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(timezone=True),
                  server_default=sa.text('now()'), autoincrement=False,
                  nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True),
                  server_default=sa.text('now()'), autoincrement=False,
                  nullable=True),
        sa.ForeignKeyConstraint(['template_id'], ['agent_templates.id'],
                                name=op.f('fk_agent_metadata_template_id'),
                                ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('agent_id', name=op.f('agent_metadata_pkey'))
    )
    # ### end Alembic commands ###
