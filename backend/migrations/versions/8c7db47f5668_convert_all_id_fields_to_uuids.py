"""Convert all ID fields to UUIDs

Revision ID: 8c7db47f5668
Revises: 239720e64f0f
Create Date: 2025-10-01 09:11:26.300334

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c7db47f5668'
down_revision: Union[str, None] = '239720e64f0f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Drop foreign key constraints first
    op.execute("ALTER TABLE agent_templates DROP CONSTRAINT IF EXISTS fk_agent_templates_suite_id")
    op.execute("ALTER TABLE chat_messages DROP CONSTRAINT IF EXISTS chat_messages_session_id_fkey")
    op.execute("ALTER TABLE chat_sessions DROP CONSTRAINT IF EXISTS chat_sessions_agent_id_fkey")
    op.execute("ALTER TABLE virtual_agents DROP CONSTRAINT IF EXISTS virtual_agent_configs_template_id_fkey")

    # Truncate template tables since they get populated on startup
    op.execute("TRUNCATE TABLE agent_templates CASCADE")
    op.execute("TRUNCATE TABLE template_suites CASCADE")

    # Convert VARCHAR columns to UUID using PostgreSQL's built-in casting
    # For template tables, we can convert the empty tables directly
    op.execute("ALTER TABLE template_suites ALTER COLUMN id TYPE UUID USING id::uuid")
    op.execute("ALTER TABLE agent_templates ALTER COLUMN id TYPE UUID USING id::uuid")
    op.execute("ALTER TABLE agent_templates ALTER COLUMN suite_id TYPE UUID USING suite_id::uuid")

    # For other tables, try to convert existing data (will fail if not valid UUIDs)
    op.execute("ALTER TABLE virtual_agents ALTER COLUMN id TYPE UUID USING id::uuid")
    op.execute("ALTER TABLE virtual_agents ALTER COLUMN template_id TYPE UUID USING template_id::uuid")
    op.execute("ALTER TABLE chat_sessions ALTER COLUMN id TYPE UUID USING id::uuid")
    op.execute("ALTER TABLE chat_sessions ALTER COLUMN agent_id TYPE UUID USING agent_id::uuid")
    op.execute("ALTER TABLE chat_messages ALTER COLUMN session_id TYPE UUID USING session_id::uuid")

    # Add UUID column to knowledge_bases and make it primary key
    op.add_column('knowledge_bases', sa.Column('id', sa.UUID(), nullable=False))
    op.create_unique_constraint(None, 'knowledge_bases', ['vector_store_name'])

    # Recreate foreign key constraints
    op.execute(
        "ALTER TABLE agent_templates ADD CONSTRAINT fk_agent_templates_suite_id "
        "FOREIGN KEY (suite_id) REFERENCES template_suites(id) ON DELETE CASCADE"
    )
    op.execute(
        "ALTER TABLE chat_messages ADD CONSTRAINT chat_messages_session_id_fkey "
        "FOREIGN KEY (session_id) REFERENCES chat_sessions(id) ON DELETE CASCADE"
    )
    op.execute(
        "ALTER TABLE chat_sessions ADD CONSTRAINT chat_sessions_agent_id_fkey "
        "FOREIGN KEY (agent_id) REFERENCES virtual_agents(id) ON DELETE CASCADE"
    )
    op.execute(
        "ALTER TABLE virtual_agents ADD CONSTRAINT virtual_agent_configs_template_id_fkey "
        "FOREIGN KEY (template_id) REFERENCES agent_templates(id) ON DELETE SET NULL"
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('virtual_agents', 'template_id',
                    existing_type=sa.UUID(),
                    type_=sa.VARCHAR(length=255),
                    existing_nullable=True)
    op.alter_column('virtual_agents', 'id',
                    existing_type=sa.UUID(),
                    type_=sa.VARCHAR(length=255),
                    existing_nullable=False)
    op.alter_column('template_suites', 'id',
                    existing_type=sa.UUID(),
                    type_=sa.VARCHAR(length=255),
                    existing_nullable=False)
    op.drop_constraint(None, 'knowledge_bases', type_='unique')
    op.drop_column('knowledge_bases', 'id')
    op.alter_column('chat_sessions', 'agent_id',
                    existing_type=sa.UUID(),
                    type_=sa.VARCHAR(length=255),
                    existing_nullable=True)
    op.alter_column('chat_sessions', 'id',
                    existing_type=sa.UUID(),
                    type_=sa.VARCHAR(length=255),
                    existing_nullable=False)
    op.alter_column('chat_messages', 'session_id',
                    existing_type=sa.UUID(),
                    type_=sa.VARCHAR(length=255),
                    existing_nullable=False)
    op.alter_column('agent_templates', 'suite_id',
                    existing_type=sa.UUID(),
                    type_=sa.VARCHAR(length=255),
                    existing_nullable=False)
    op.alter_column('agent_templates', 'id',
                    existing_type=sa.UUID(),
                    type_=sa.VARCHAR(length=255),
                    existing_nullable=False)
    # ### end Alembic commands ###
